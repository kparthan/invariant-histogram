%!PS-Adobe-2.0 EPSF-2.0
%%Title: test/square.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Jun 17 05:48:36 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test/square.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (parthan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun 17 05:48:36 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
546 280 M
63 0 V
6338 0 R
-63 0 V
462 280 M
( 0) Rshow
1.000 UL
LTb
546 1198 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 0.2) Rshow
1.000 UL
LTb
546 2116 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 0.4) Rshow
1.000 UL
LTb
546 3035 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 0.6) Rshow
1.000 UL
LTb
546 3953 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 0.8) Rshow
1.000 UL
LTb
546 4871 M
63 0 V
6338 0 R
-63 0 V
-6422 0 R
( 1) Rshow
1.000 UL
LTb
546 280 M
0 63 V
0 4528 R
0 -63 V
546 140 M
( 0) Cshow
1.000 UL
LTb
1826 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 0.2) Cshow
1.000 UL
LTb
3106 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 0.4) Cshow
1.000 UL
LTb
4387 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 0.6) Cshow
1.000 UL
LTb
5667 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 0.8) Cshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
6296 4738 M
(actual) Rshow
LT0
1.00 0.00 0.00 C 546 280 Pls
610 280 Pls
674 280 Pls
738 280 Pls
802 280 Pls
866 280 Pls
930 280 Pls
994 280 Pls
1058 280 Pls
1122 280 Pls
1186 280 Pls
1250 280 Pls
1314 280 Pls
1378 280 Pls
1442 280 Pls
1506 280 Pls
1570 280 Pls
1634 280 Pls
1698 280 Pls
1762 280 Pls
1826 280 Pls
1890 280 Pls
1954 280 Pls
2018 280 Pls
2082 280 Pls
2146 280 Pls
2210 280 Pls
2274 280 Pls
2338 280 Pls
2402 280 Pls
2466 280 Pls
2530 280 Pls
2594 280 Pls
2658 280 Pls
2722 280 Pls
2786 280 Pls
2850 280 Pls
2914 280 Pls
2978 280 Pls
3042 280 Pls
3106 280 Pls
3170 280 Pls
3234 280 Pls
3298 280 Pls
3362 280 Pls
3426 280 Pls
3490 280 Pls
3554 280 Pls
3618 280 Pls
3682 280 Pls
3747 280 Pls
3811 280 Pls
3875 280 Pls
3939 280 Pls
4003 280 Pls
4067 280 Pls
4131 280 Pls
4195 280 Pls
4259 280 Pls
4323 280 Pls
4387 280 Pls
4451 280 Pls
4515 280 Pls
4579 280 Pls
4643 280 Pls
4707 280 Pls
4771 280 Pls
4835 280 Pls
4899 280 Pls
4963 280 Pls
5027 280 Pls
5091 280 Pls
5155 280 Pls
5219 280 Pls
5283 280 Pls
5347 280 Pls
5411 280 Pls
5475 280 Pls
5539 280 Pls
5603 280 Pls
5667 280 Pls
5731 280 Pls
5795 280 Pls
5859 280 Pls
5923 280 Pls
5987 280 Pls
6051 280 Pls
6115 280 Pls
6179 280 Pls
6243 280 Pls
6307 280 Pls
6371 280 Pls
6435 280 Pls
6499 280 Pls
6563 280 Pls
6627 280 Pls
6691 280 Pls
6755 280 Pls
6819 280 Pls
6883 280 Pls
6947 280 Pls
6947 326 Pls
6947 372 Pls
6947 418 Pls
6947 464 Pls
6947 510 Pls
6947 555 Pls
6947 601 Pls
6947 647 Pls
6947 693 Pls
6947 739 Pls
6947 785 Pls
6947 831 Pls
6947 877 Pls
6947 923 Pls
6947 969 Pls
6947 1015 Pls
6947 1060 Pls
6947 1106 Pls
6947 1152 Pls
6947 1198 Pls
6947 1244 Pls
6947 1290 Pls
6947 1336 Pls
6947 1382 Pls
6947 1428 Pls
6947 1474 Pls
6947 1520 Pls
6947 1565 Pls
6947 1611 Pls
6947 1657 Pls
6947 1703 Pls
6947 1749 Pls
6947 1795 Pls
6947 1841 Pls
6947 1887 Pls
6947 1933 Pls
6947 1979 Pls
6947 2025 Pls
6947 2070 Pls
6947 2116 Pls
6947 2162 Pls
6947 2208 Pls
6947 2254 Pls
6947 2300 Pls
6947 2346 Pls
6947 2392 Pls
6947 2438 Pls
6947 2484 Pls
6947 2530 Pls
6947 2576 Pls
6947 2621 Pls
6947 2667 Pls
6947 2713 Pls
6947 2759 Pls
6947 2805 Pls
6947 2851 Pls
6947 2897 Pls
6947 2943 Pls
6947 2989 Pls
6947 3035 Pls
6947 3081 Pls
6947 3126 Pls
6947 3172 Pls
6947 3218 Pls
6947 3264 Pls
6947 3310 Pls
6947 3356 Pls
6947 3402 Pls
6947 3448 Pls
6947 3494 Pls
6947 3540 Pls
6947 3586 Pls
6947 3631 Pls
6947 3677 Pls
6947 3723 Pls
6947 3769 Pls
6947 3815 Pls
6947 3861 Pls
6947 3907 Pls
6947 3953 Pls
6947 3999 Pls
6947 4045 Pls
6947 4091 Pls
6947 4136 Pls
6947 4182 Pls
6947 4228 Pls
6947 4274 Pls
6947 4320 Pls
6947 4366 Pls
6947 4412 Pls
6947 4458 Pls
6947 4504 Pls
6947 4550 Pls
6947 4596 Pls
6947 4641 Pls
6947 4687 Pls
6947 4733 Pls
6947 4779 Pls
6947 4825 Pls
6947 4871 Pls
6883 4871 Pls
6819 4871 Pls
6755 4871 Pls
6691 4871 Pls
6627 4871 Pls
6563 4871 Pls
6499 4871 Pls
6435 4871 Pls
6371 4871 Pls
6307 4871 Pls
6243 4871 Pls
6179 4871 Pls
6115 4871 Pls
6051 4871 Pls
5987 4871 Pls
5923 4871 Pls
5859 4871 Pls
5795 4871 Pls
5731 4871 Pls
5667 4871 Pls
5603 4871 Pls
5539 4871 Pls
5475 4871 Pls
5411 4871 Pls
5347 4871 Pls
5283 4871 Pls
5219 4871 Pls
5155 4871 Pls
5091 4871 Pls
5027 4871 Pls
4963 4871 Pls
4899 4871 Pls
4835 4871 Pls
4771 4871 Pls
4707 4871 Pls
4643 4871 Pls
4579 4871 Pls
4515 4871 Pls
4451 4871 Pls
4387 4871 Pls
4323 4871 Pls
4259 4871 Pls
4195 4871 Pls
4131 4871 Pls
4067 4871 Pls
4003 4871 Pls
3939 4871 Pls
3875 4871 Pls
3811 4871 Pls
3747 4871 Pls
3682 4871 Pls
3618 4871 Pls
3554 4871 Pls
3490 4871 Pls
3426 4871 Pls
3362 4871 Pls
3298 4871 Pls
3234 4871 Pls
3170 4871 Pls
3106 4871 Pls
3042 4871 Pls
2978 4871 Pls
2914 4871 Pls
2850 4871 Pls
2786 4871 Pls
2722 4871 Pls
2658 4871 Pls
2594 4871 Pls
2530 4871 Pls
2466 4871 Pls
2402 4871 Pls
2338 4871 Pls
2274 4871 Pls
2210 4871 Pls
2146 4871 Pls
2082 4871 Pls
2018 4871 Pls
1954 4871 Pls
1890 4871 Pls
1826 4871 Pls
1762 4871 Pls
1698 4871 Pls
1634 4871 Pls
1570 4871 Pls
1506 4871 Pls
1442 4871 Pls
1378 4871 Pls
1314 4871 Pls
1250 4871 Pls
1186 4871 Pls
1122 4871 Pls
1058 4871 Pls
994 4871 Pls
930 4871 Pls
866 4871 Pls
802 4871 Pls
738 4871 Pls
674 4871 Pls
610 4871 Pls
546 4871 Pls
546 4825 Pls
546 4779 Pls
546 4733 Pls
546 4687 Pls
546 4641 Pls
546 4596 Pls
546 4550 Pls
546 4504 Pls
546 4458 Pls
546 4412 Pls
546 4366 Pls
546 4320 Pls
546 4274 Pls
546 4228 Pls
546 4182 Pls
546 4136 Pls
546 4091 Pls
546 4045 Pls
546 3999 Pls
546 3953 Pls
546 3907 Pls
546 3861 Pls
546 3815 Pls
546 3769 Pls
546 3723 Pls
546 3677 Pls
546 3631 Pls
546 3586 Pls
546 3540 Pls
546 3494 Pls
546 3448 Pls
546 3402 Pls
546 3356 Pls
546 3310 Pls
546 3264 Pls
546 3218 Pls
546 3172 Pls
546 3126 Pls
546 3081 Pls
546 3035 Pls
546 2989 Pls
546 2943 Pls
546 2897 Pls
546 2851 Pls
546 2805 Pls
546 2759 Pls
546 2713 Pls
546 2667 Pls
546 2621 Pls
546 2576 Pls
546 2530 Pls
546 2484 Pls
546 2438 Pls
546 2392 Pls
546 2346 Pls
546 2300 Pls
546 2254 Pls
546 2208 Pls
546 2162 Pls
546 2116 Pls
546 2070 Pls
546 2025 Pls
546 1979 Pls
546 1933 Pls
546 1887 Pls
546 1841 Pls
546 1795 Pls
546 1749 Pls
546 1703 Pls
546 1657 Pls
546 1611 Pls
546 1565 Pls
546 1520 Pls
546 1474 Pls
546 1428 Pls
546 1382 Pls
546 1336 Pls
546 1290 Pls
546 1244 Pls
546 1198 Pls
546 1152 Pls
546 1106 Pls
546 1060 Pls
546 1015 Pls
546 969 Pls
546 923 Pls
546 877 Pls
546 831 Pls
546 785 Pls
546 739 Pls
546 693 Pls
546 647 Pls
546 601 Pls
546 555 Pls
546 510 Pls
546 464 Pls
546 418 Pls
546 372 Pls
546 326 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
0.00 0.00 1.00 C LCb setrgbcolor
6296 4598 M
(samples) Rshow
LT1
0.00 0.00 1.00 C 6045 280 Crs
1676 280 Crs
6947 1301 Crs
1404 4871 Crs
6947 2439 Crs
6947 1184 Crs
4531 280 Crs
546 1213 Crs
546 3364 Crs
6497 280 Crs
546 3620 Crs
6947 2276 Crs
830 4871 Crs
6947 2947 Crs
6947 4300 Crs
6947 2549 Crs
4465 4871 Crs
5986 4871 Crs
5474 4871 Crs
6405 280 Crs
3974 4871 Crs
6117 280 Crs
1070 280 Crs
755 4871 Crs
6947 3521 Crs
546 3226 Crs
546 3841 Crs
546 2040 Crs
1809 280 Crs
4159 280 Crs
4191 280 Crs
5717 280 Crs
546 1522 Crs
546 2265 Crs
546 400 Crs
6947 3310 Crs
6947 3013 Crs
3584 4871 Crs
5684 4871 Crs
6947 680 Crs
6579 4598 Crs
% End plot #2
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
